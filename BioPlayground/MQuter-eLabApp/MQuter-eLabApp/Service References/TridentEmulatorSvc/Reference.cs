//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace MQuter_eLabApp.TridentEmulatorSvc {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/TridentConnector.DataContracts")]
    public partial class Category : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Activity> ActivitiesField;
        
        private string DescriptionField;
        
        private System.Guid IdField;
        
        private string LabelField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Activity> Activities {
            get {
                return this.ActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivitiesField, value) != true)) {
                    this.ActivitiesField = value;
                    this.RaisePropertyChanged("Activities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Activity", Namespace="http://schemas.datacontract.org/2004/07/TridentConnector.DataContracts")]
    public partial class Activity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ActivityClassField;
        
        private MQuter_eLabApp.TridentEmulatorSvc.Activity.ActivityType ActivityTypesField;
        
        private string DescriptionField;
        
        private string DisplayLabelField;
        
        private System.Guid IdField;
        
        private System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Parameter> InputParamField;
        
        private System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Parameter> OutputParamField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityClass {
            get {
                return this.ActivityClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityClassField, value) != true)) {
                    this.ActivityClassField = value;
                    this.RaisePropertyChanged("ActivityClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MQuter_eLabApp.TridentEmulatorSvc.Activity.ActivityType ActivityTypes {
            get {
                return this.ActivityTypesField;
            }
            set {
                if ((this.ActivityTypesField.Equals(value) != true)) {
                    this.ActivityTypesField = value;
                    this.RaisePropertyChanged("ActivityTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayLabel {
            get {
                return this.DisplayLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayLabelField, value) != true)) {
                    this.DisplayLabelField = value;
                    this.RaisePropertyChanged("DisplayLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Parameter> InputParam {
            get {
                return this.InputParamField;
            }
            set {
                if ((object.ReferenceEquals(this.InputParamField, value) != true)) {
                    this.InputParamField = value;
                    this.RaisePropertyChanged("InputParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Parameter> OutputParam {
            get {
                return this.OutputParamField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputParamField, value) != true)) {
                    this.OutputParamField = value;
                    this.RaisePropertyChanged("OutputParam");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Activity.ActivityType", Namespace="http://schemas.datacontract.org/2004/07/TridentConnector.DataContracts")]
        public enum ActivityType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Standard = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ForLoop = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parameter", Namespace="http://schemas.datacontract.org/2004/07/TridentConnector.DataContracts")]
    public partial class Parameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CompulsaryField;
        
        private string DataTypeField;
        
        private string DescriptionField;
        
        private bool IsInputParamField;
        
        private string LabelField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Compulsary {
            get {
                return this.CompulsaryField;
            }
            set {
                if ((this.CompulsaryField.Equals(value) != true)) {
                    this.CompulsaryField = value;
                    this.RaisePropertyChanged("Compulsary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeField, value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInputParam {
            get {
                return this.IsInputParamField;
            }
            set {
                if ((this.IsInputParamField.Equals(value) != true)) {
                    this.IsInputParamField = value;
                    this.RaisePropertyChanged("IsInputParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="TridentEmulatorSvc.WorkflowService")]
    public interface WorkflowService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:WorkflowService/DoWork", ReplyAction="urn:WorkflowService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:WorkflowService/RetrieveActivities", ReplyAction="urn:WorkflowService/RetrieveActivitiesResponse")]
        System.IAsyncResult BeginRetrieveActivities(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Category> EndRetrieveActivities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:WorkflowService/SaveWorkFlow", ReplyAction="urn:WorkflowService/SaveWorkFlowResponse")]
        System.IAsyncResult BeginSaveWorkFlow(string xmlcontent, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndSaveWorkFlow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:WorkflowService/ExecuteWorkflow", ReplyAction="urn:WorkflowService/ExecuteWorkflowResponse")]
        System.IAsyncResult BeginExecuteWorkflow(string workflowName, System.Guid workflowId, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndExecuteWorkflow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:WorkflowService/HelloWorld", ReplyAction="urn:WorkflowService/HelloWorldResponse")]
        System.IAsyncResult BeginHelloWorld(string workflowName, System.Guid workflowId, System.AsyncCallback callback, object asyncState);
        
        string EndHelloWorld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:WorkflowService/GetJobStatus", ReplyAction="urn:WorkflowService/GetJobStatusResponse")]
        System.IAsyncResult BeginGetJobStatus(string jobName, System.Guid jobId, System.AsyncCallback callback, object asyncState);
        
        string EndGetJobStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:WorkflowService/GetJobOuput", ReplyAction="urn:WorkflowService/GetJobOuputResponse")]
        System.IAsyncResult BeginGetJobOuput(string jobName, System.Guid jobId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<string> EndGetJobOuput(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WorkflowServiceChannel : MQuter_eLabApp.TridentEmulatorSvc.WorkflowService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetrieveActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Category> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Category>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveWorkFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveWorkFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJobStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJobStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJobOuputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJobOuputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkflowServiceClient : System.ServiceModel.ClientBase<MQuter_eLabApp.TridentEmulatorSvc.WorkflowService>, MQuter_eLabApp.TridentEmulatorSvc.WorkflowService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetrieveActivitiesDelegate;
        
        private EndOperationDelegate onEndRetrieveActivitiesDelegate;
        
        private System.Threading.SendOrPostCallback onRetrieveActivitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveWorkFlowDelegate;
        
        private EndOperationDelegate onEndSaveWorkFlowDelegate;
        
        private System.Threading.SendOrPostCallback onSaveWorkFlowCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteWorkflowDelegate;
        
        private EndOperationDelegate onEndExecuteWorkflowDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteWorkflowCompletedDelegate;
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJobStatusDelegate;
        
        private EndOperationDelegate onEndGetJobStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetJobStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJobOuputDelegate;
        
        private EndOperationDelegate onEndGetJobOuputDelegate;
        
        private System.Threading.SendOrPostCallback onGetJobOuputCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WorkflowServiceClient() {
        }
        
        public WorkflowServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkflowServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkflowServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkflowServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<RetrieveActivitiesCompletedEventArgs> RetrieveActivitiesCompleted;
        
        public event System.EventHandler<SaveWorkFlowCompletedEventArgs> SaveWorkFlowCompleted;
        
        public event System.EventHandler<ExecuteWorkflowCompletedEventArgs> ExecuteWorkflowCompleted;
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<GetJobStatusCompletedEventArgs> GetJobStatusCompleted;
        
        public event System.EventHandler<GetJobOuputCompletedEventArgs> GetJobOuputCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.BeginRetrieveActivities(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetrieveActivities(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Category> MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.EndRetrieveActivities(System.IAsyncResult result) {
            return base.Channel.EndRetrieveActivities(result);
        }
        
        private System.IAsyncResult OnBeginRetrieveActivities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).BeginRetrieveActivities(callback, asyncState);
        }
        
        private object[] OnEndRetrieveActivities(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Category> retVal = ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).EndRetrieveActivities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetrieveActivitiesCompleted(object state) {
            if ((this.RetrieveActivitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetrieveActivitiesCompleted(this, new RetrieveActivitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetrieveActivitiesAsync() {
            this.RetrieveActivitiesAsync(null);
        }
        
        public void RetrieveActivitiesAsync(object userState) {
            if ((this.onBeginRetrieveActivitiesDelegate == null)) {
                this.onBeginRetrieveActivitiesDelegate = new BeginOperationDelegate(this.OnBeginRetrieveActivities);
            }
            if ((this.onEndRetrieveActivitiesDelegate == null)) {
                this.onEndRetrieveActivitiesDelegate = new EndOperationDelegate(this.OnEndRetrieveActivities);
            }
            if ((this.onRetrieveActivitiesCompletedDelegate == null)) {
                this.onRetrieveActivitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetrieveActivitiesCompleted);
            }
            base.InvokeAsync(this.onBeginRetrieveActivitiesDelegate, null, this.onEndRetrieveActivitiesDelegate, this.onRetrieveActivitiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.BeginSaveWorkFlow(string xmlcontent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveWorkFlow(xmlcontent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Guid MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.EndSaveWorkFlow(System.IAsyncResult result) {
            return base.Channel.EndSaveWorkFlow(result);
        }
        
        private System.IAsyncResult OnBeginSaveWorkFlow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xmlcontent = ((string)(inValues[0]));
            return ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).BeginSaveWorkFlow(xmlcontent, callback, asyncState);
        }
        
        private object[] OnEndSaveWorkFlow(System.IAsyncResult result) {
            System.Guid retVal = ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).EndSaveWorkFlow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveWorkFlowCompleted(object state) {
            if ((this.SaveWorkFlowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveWorkFlowCompleted(this, new SaveWorkFlowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveWorkFlowAsync(string xmlcontent) {
            this.SaveWorkFlowAsync(xmlcontent, null);
        }
        
        public void SaveWorkFlowAsync(string xmlcontent, object userState) {
            if ((this.onBeginSaveWorkFlowDelegate == null)) {
                this.onBeginSaveWorkFlowDelegate = new BeginOperationDelegate(this.OnBeginSaveWorkFlow);
            }
            if ((this.onEndSaveWorkFlowDelegate == null)) {
                this.onEndSaveWorkFlowDelegate = new EndOperationDelegate(this.OnEndSaveWorkFlow);
            }
            if ((this.onSaveWorkFlowCompletedDelegate == null)) {
                this.onSaveWorkFlowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveWorkFlowCompleted);
            }
            base.InvokeAsync(this.onBeginSaveWorkFlowDelegate, new object[] {
                        xmlcontent}, this.onEndSaveWorkFlowDelegate, this.onSaveWorkFlowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.BeginExecuteWorkflow(string workflowName, System.Guid workflowId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteWorkflow(workflowName, workflowId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Guid MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.EndExecuteWorkflow(System.IAsyncResult result) {
            return base.Channel.EndExecuteWorkflow(result);
        }
        
        private System.IAsyncResult OnBeginExecuteWorkflow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string workflowName = ((string)(inValues[0]));
            System.Guid workflowId = ((System.Guid)(inValues[1]));
            return ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).BeginExecuteWorkflow(workflowName, workflowId, callback, asyncState);
        }
        
        private object[] OnEndExecuteWorkflow(System.IAsyncResult result) {
            System.Guid retVal = ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).EndExecuteWorkflow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteWorkflowCompleted(object state) {
            if ((this.ExecuteWorkflowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteWorkflowCompleted(this, new ExecuteWorkflowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteWorkflowAsync(string workflowName, System.Guid workflowId) {
            this.ExecuteWorkflowAsync(workflowName, workflowId, null);
        }
        
        public void ExecuteWorkflowAsync(string workflowName, System.Guid workflowId, object userState) {
            if ((this.onBeginExecuteWorkflowDelegate == null)) {
                this.onBeginExecuteWorkflowDelegate = new BeginOperationDelegate(this.OnBeginExecuteWorkflow);
            }
            if ((this.onEndExecuteWorkflowDelegate == null)) {
                this.onEndExecuteWorkflowDelegate = new EndOperationDelegate(this.OnEndExecuteWorkflow);
            }
            if ((this.onExecuteWorkflowCompletedDelegate == null)) {
                this.onExecuteWorkflowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteWorkflowCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteWorkflowDelegate, new object[] {
                        workflowName,
                        workflowId}, this.onEndExecuteWorkflowDelegate, this.onExecuteWorkflowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.BeginHelloWorld(string workflowName, System.Guid workflowId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(workflowName, workflowId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string workflowName = ((string)(inValues[0]));
            System.Guid workflowId = ((System.Guid)(inValues[1]));
            return ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).BeginHelloWorld(workflowName, workflowId, callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync(string workflowName, System.Guid workflowId) {
            this.HelloWorldAsync(workflowName, workflowId, null);
        }
        
        public void HelloWorldAsync(string workflowName, System.Guid workflowId, object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, new object[] {
                        workflowName,
                        workflowId}, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.BeginGetJobStatus(string jobName, System.Guid jobId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJobStatus(jobName, jobId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.EndGetJobStatus(System.IAsyncResult result) {
            return base.Channel.EndGetJobStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetJobStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jobName = ((string)(inValues[0]));
            System.Guid jobId = ((System.Guid)(inValues[1]));
            return ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).BeginGetJobStatus(jobName, jobId, callback, asyncState);
        }
        
        private object[] OnEndGetJobStatus(System.IAsyncResult result) {
            string retVal = ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).EndGetJobStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJobStatusCompleted(object state) {
            if ((this.GetJobStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJobStatusCompleted(this, new GetJobStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJobStatusAsync(string jobName, System.Guid jobId) {
            this.GetJobStatusAsync(jobName, jobId, null);
        }
        
        public void GetJobStatusAsync(string jobName, System.Guid jobId, object userState) {
            if ((this.onBeginGetJobStatusDelegate == null)) {
                this.onBeginGetJobStatusDelegate = new BeginOperationDelegate(this.OnBeginGetJobStatus);
            }
            if ((this.onEndGetJobStatusDelegate == null)) {
                this.onEndGetJobStatusDelegate = new EndOperationDelegate(this.OnEndGetJobStatus);
            }
            if ((this.onGetJobStatusCompletedDelegate == null)) {
                this.onGetJobStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJobStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetJobStatusDelegate, new object[] {
                        jobName,
                        jobId}, this.onEndGetJobStatusDelegate, this.onGetJobStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.BeginGetJobOuput(string jobName, System.Guid jobId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJobOuput(jobName, jobId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.Collection<string> MQuter_eLabApp.TridentEmulatorSvc.WorkflowService.EndGetJobOuput(System.IAsyncResult result) {
            return base.Channel.EndGetJobOuput(result);
        }
        
        private System.IAsyncResult OnBeginGetJobOuput(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string jobName = ((string)(inValues[0]));
            System.Guid jobId = ((System.Guid)(inValues[1]));
            return ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).BeginGetJobOuput(jobName, jobId, callback, asyncState);
        }
        
        private object[] OnEndGetJobOuput(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<string> retVal = ((MQuter_eLabApp.TridentEmulatorSvc.WorkflowService)(this)).EndGetJobOuput(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJobOuputCompleted(object state) {
            if ((this.GetJobOuputCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJobOuputCompleted(this, new GetJobOuputCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJobOuputAsync(string jobName, System.Guid jobId) {
            this.GetJobOuputAsync(jobName, jobId, null);
        }
        
        public void GetJobOuputAsync(string jobName, System.Guid jobId, object userState) {
            if ((this.onBeginGetJobOuputDelegate == null)) {
                this.onBeginGetJobOuputDelegate = new BeginOperationDelegate(this.OnBeginGetJobOuput);
            }
            if ((this.onEndGetJobOuputDelegate == null)) {
                this.onEndGetJobOuputDelegate = new EndOperationDelegate(this.OnEndGetJobOuput);
            }
            if ((this.onGetJobOuputCompletedDelegate == null)) {
                this.onGetJobOuputCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJobOuputCompleted);
            }
            base.InvokeAsync(this.onBeginGetJobOuputDelegate, new object[] {
                        jobName,
                        jobId}, this.onEndGetJobOuputDelegate, this.onGetJobOuputCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MQuter_eLabApp.TridentEmulatorSvc.WorkflowService CreateChannel() {
            return new WorkflowServiceClientChannel(this);
        }
        
        private class WorkflowServiceClientChannel : ChannelBase<MQuter_eLabApp.TridentEmulatorSvc.WorkflowService>, MQuter_eLabApp.TridentEmulatorSvc.WorkflowService {
            
            public WorkflowServiceClientChannel(System.ServiceModel.ClientBase<MQuter_eLabApp.TridentEmulatorSvc.WorkflowService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginRetrieveActivities(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RetrieveActivities", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Category> EndRetrieveActivities(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Category> _result = ((System.Collections.ObjectModel.Collection<MQuter_eLabApp.TridentEmulatorSvc.Category>)(base.EndInvoke("RetrieveActivities", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveWorkFlow(string xmlcontent, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xmlcontent;
                System.IAsyncResult _result = base.BeginInvoke("SaveWorkFlow", _args, callback, asyncState);
                return _result;
            }
            
            public System.Guid EndSaveWorkFlow(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Guid _result = ((System.Guid)(base.EndInvoke("SaveWorkFlow", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExecuteWorkflow(string workflowName, System.Guid workflowId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = workflowName;
                _args[1] = workflowId;
                System.IAsyncResult _result = base.BeginInvoke("ExecuteWorkflow", _args, callback, asyncState);
                return _result;
            }
            
            public System.Guid EndExecuteWorkflow(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Guid _result = ((System.Guid)(base.EndInvoke("ExecuteWorkflow", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHelloWorld(string workflowName, System.Guid workflowId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = workflowName;
                _args[1] = workflowId;
                System.IAsyncResult _result = base.BeginInvoke("HelloWorld", _args, callback, asyncState);
                return _result;
            }
            
            public string EndHelloWorld(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("HelloWorld", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetJobStatus(string jobName, System.Guid jobId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = jobName;
                _args[1] = jobId;
                System.IAsyncResult _result = base.BeginInvoke("GetJobStatus", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetJobStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetJobStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetJobOuput(string jobName, System.Guid jobId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = jobName;
                _args[1] = jobId;
                System.IAsyncResult _result = base.BeginInvoke("GetJobOuput", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.Collection<string> EndGetJobOuput(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.Collection<string> _result = ((System.Collections.ObjectModel.Collection<string>)(base.EndInvoke("GetJobOuput", _args, result)));
                return _result;
            }
        }
    }
}
