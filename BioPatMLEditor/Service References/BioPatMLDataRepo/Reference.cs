//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace BioPatMLEditor.BioPatMLDataRepo {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefinitionPatternInfo", Namespace="http://schemas.datacontract.org/2004/07/BioPatMLEditor.Web")]
    public partial class DefinitionPatternInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DefinitionNameField;
        
        private string MainPatternIdField;
        
        private string MainPatternNameField;
        
        private string MainPatternTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefinitionName {
            get {
                return this.DefinitionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionNameField, value) != true)) {
                    this.DefinitionNameField = value;
                    this.RaisePropertyChanged("DefinitionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainPatternId {
            get {
                return this.MainPatternIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPatternIdField, value) != true)) {
                    this.MainPatternIdField = value;
                    this.RaisePropertyChanged("MainPatternId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainPatternName {
            get {
                return this.MainPatternNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPatternNameField, value) != true)) {
                    this.MainPatternNameField = value;
                    this.RaisePropertyChanged("MainPatternName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainPatternType {
            get {
                return this.MainPatternTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPatternTypeField, value) != true)) {
                    this.MainPatternTypeField = value;
                    this.RaisePropertyChanged("MainPatternType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefinitionInfo", Namespace="http://schemas.datacontract.org/2004/07/QUT.Bio.BioPatMLDataRepository.DataContra" +
        "ct")]
    public partial class DefinitionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DefinitionNameField;
        
        private string MainPatternIdField;
        
        private string MainPatternNameField;
        
        private string MainPatternTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefinitionName {
            get {
                return this.DefinitionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionNameField, value) != true)) {
                    this.DefinitionNameField = value;
                    this.RaisePropertyChanged("DefinitionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainPatternId {
            get {
                return this.MainPatternIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPatternIdField, value) != true)) {
                    this.MainPatternIdField = value;
                    this.RaisePropertyChanged("MainPatternId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainPatternName {
            get {
                return this.MainPatternNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPatternNameField, value) != true)) {
                    this.MainPatternNameField = value;
                    this.RaisePropertyChanged("MainPatternName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainPatternType {
            get {
                return this.MainPatternTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPatternTypeField, value) != true)) {
                    this.MainPatternTypeField = value;
                    this.RaisePropertyChanged("MainPatternType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="BioPatMLDataRepo.BioPatMLDataService")]
    public interface BioPatMLDataService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:BioPatMLDataService/DoWork", ReplyAction="urn:BioPatMLDataService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:BioPatMLDataService/GetALLDefPatternInfo", ReplyAction="urn:BioPatMLDataService/GetALLDefPatternInfoResponse")]
        System.IAsyncResult BeginGetALLDefPatternInfo(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<BioPatMLEditor.BioPatMLDataRepo.DefinitionPatternInfo> EndGetALLDefPatternInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:BioPatMLDataService/GetPatternDetailInfo", ReplyAction="urn:BioPatMLDataService/GetPatternDetailInfoResponse")]
        System.IAsyncResult BeginGetPatternDetailInfo(BioPatMLEditor.BioPatMLDataRepo.DefinitionInfo def, System.AsyncCallback callback, object asyncState);
        
        string EndGetPatternDetailInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BioPatMLDataServiceChannel : BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetALLDefPatternInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetALLDefPatternInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<BioPatMLEditor.BioPatMLDataRepo.DefinitionPatternInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<BioPatMLEditor.BioPatMLDataRepo.DefinitionPatternInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPatternDetailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPatternDetailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BioPatMLDataServiceClient : System.ServiceModel.ClientBase<BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService>, BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetALLDefPatternInfoDelegate;
        
        private EndOperationDelegate onEndGetALLDefPatternInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetALLDefPatternInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPatternDetailInfoDelegate;
        
        private EndOperationDelegate onEndGetPatternDetailInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetPatternDetailInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BioPatMLDataServiceClient() {
        }
        
        public BioPatMLDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BioPatMLDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BioPatMLDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BioPatMLDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetALLDefPatternInfoCompletedEventArgs> GetALLDefPatternInfoCompleted;
        
        public event System.EventHandler<GetPatternDetailInfoCompletedEventArgs> GetPatternDetailInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService.BeginGetALLDefPatternInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetALLDefPatternInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<BioPatMLEditor.BioPatMLDataRepo.DefinitionPatternInfo> BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService.EndGetALLDefPatternInfo(System.IAsyncResult result) {
            return base.Channel.EndGetALLDefPatternInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetALLDefPatternInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService)(this)).BeginGetALLDefPatternInfo(callback, asyncState);
        }
        
        private object[] OnEndGetALLDefPatternInfo(System.IAsyncResult result) {
            System.Collections.Generic.List<BioPatMLEditor.BioPatMLDataRepo.DefinitionPatternInfo> retVal = ((BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService)(this)).EndGetALLDefPatternInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetALLDefPatternInfoCompleted(object state) {
            if ((this.GetALLDefPatternInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetALLDefPatternInfoCompleted(this, new GetALLDefPatternInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetALLDefPatternInfoAsync() {
            this.GetALLDefPatternInfoAsync(null);
        }
        
        public void GetALLDefPatternInfoAsync(object userState) {
            if ((this.onBeginGetALLDefPatternInfoDelegate == null)) {
                this.onBeginGetALLDefPatternInfoDelegate = new BeginOperationDelegate(this.OnBeginGetALLDefPatternInfo);
            }
            if ((this.onEndGetALLDefPatternInfoDelegate == null)) {
                this.onEndGetALLDefPatternInfoDelegate = new EndOperationDelegate(this.OnEndGetALLDefPatternInfo);
            }
            if ((this.onGetALLDefPatternInfoCompletedDelegate == null)) {
                this.onGetALLDefPatternInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetALLDefPatternInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetALLDefPatternInfoDelegate, null, this.onEndGetALLDefPatternInfoDelegate, this.onGetALLDefPatternInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService.BeginGetPatternDetailInfo(BioPatMLEditor.BioPatMLDataRepo.DefinitionInfo def, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPatternDetailInfo(def, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService.EndGetPatternDetailInfo(System.IAsyncResult result) {
            return base.Channel.EndGetPatternDetailInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetPatternDetailInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BioPatMLEditor.BioPatMLDataRepo.DefinitionInfo def = ((BioPatMLEditor.BioPatMLDataRepo.DefinitionInfo)(inValues[0]));
            return ((BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService)(this)).BeginGetPatternDetailInfo(def, callback, asyncState);
        }
        
        private object[] OnEndGetPatternDetailInfo(System.IAsyncResult result) {
            string retVal = ((BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService)(this)).EndGetPatternDetailInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPatternDetailInfoCompleted(object state) {
            if ((this.GetPatternDetailInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPatternDetailInfoCompleted(this, new GetPatternDetailInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPatternDetailInfoAsync(BioPatMLEditor.BioPatMLDataRepo.DefinitionInfo def) {
            this.GetPatternDetailInfoAsync(def, null);
        }
        
        public void GetPatternDetailInfoAsync(BioPatMLEditor.BioPatMLDataRepo.DefinitionInfo def, object userState) {
            if ((this.onBeginGetPatternDetailInfoDelegate == null)) {
                this.onBeginGetPatternDetailInfoDelegate = new BeginOperationDelegate(this.OnBeginGetPatternDetailInfo);
            }
            if ((this.onEndGetPatternDetailInfoDelegate == null)) {
                this.onEndGetPatternDetailInfoDelegate = new EndOperationDelegate(this.OnEndGetPatternDetailInfo);
            }
            if ((this.onGetPatternDetailInfoCompletedDelegate == null)) {
                this.onGetPatternDetailInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPatternDetailInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetPatternDetailInfoDelegate, new object[] {
                        def}, this.onEndGetPatternDetailInfoDelegate, this.onGetPatternDetailInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService CreateChannel() {
            return new BioPatMLDataServiceClientChannel(this);
        }
        
        private class BioPatMLDataServiceClientChannel : ChannelBase<BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService>, BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService {
            
            public BioPatMLDataServiceClientChannel(System.ServiceModel.ClientBase<BioPatMLEditor.BioPatMLDataRepo.BioPatMLDataService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginGetALLDefPatternInfo(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetALLDefPatternInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<BioPatMLEditor.BioPatMLDataRepo.DefinitionPatternInfo> EndGetALLDefPatternInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<BioPatMLEditor.BioPatMLDataRepo.DefinitionPatternInfo> _result = ((System.Collections.Generic.List<BioPatMLEditor.BioPatMLDataRepo.DefinitionPatternInfo>)(base.EndInvoke("GetALLDefPatternInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPatternDetailInfo(BioPatMLEditor.BioPatMLDataRepo.DefinitionInfo def, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = def;
                System.IAsyncResult _result = base.BeginInvoke("GetPatternDetailInfo", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetPatternDetailInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetPatternDetailInfo", _args, result)));
                return _result;
            }
        }
    }
}
